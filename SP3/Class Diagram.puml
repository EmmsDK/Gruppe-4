@startuml
class Main {


}

Main *-- UI

class UI{
    - ArrayList<Team> teamList;
    - String deadline;
    - ArrayList<String> dates;
    - int teamAmount;
    + String getDeadline();
    + void setDeadlineFirst(String deadline);
    + void changeDeadline(String deadline);
    + ArrayList<String> getDates();
    + void addDates(String date);
    + void removeDates(String date);
    + ArrayList<Team> getTeamList();
    + void writeTeamToFile(String file);
    + void writeDateToFile(String file);
    + void setTeamList();
    + void addTeam();
    + void changeTeamList(ArrayList<Team> _teams);
    + void readFromFile(String file);
    + void changeTeam(); Overload
}

UI *-- Player
UI *-- Team
UI *-- Admin

class Player{
    - ArrayList<String> playerNamesArray;
    - String teamNames;
    - boolean input;
    - Scanner sc;

    + void inputFromPlayers();
    - void displayList(ArrayList teamsArray, String teamDesc);
    - int playerChoiceInt();
}

class Team{
    - String teamName;
    - ArrayList<String> teamPlayers;
    + String getTeamName();
    + ArrayList<String> getTeamPlayers();
    + void setTeamName();
    + void setTeamPlayers();


}

class Admin{
    - Scanner sc;
    - void removeTeam(String teamName);


}


class Knockout{
    - int bracketSize;
    - ArrayList<ArrayList<Team>> brackets;


}

class GroupStage{


}

class Tournament{
    - ArrayList<ArrayList> tournament;
    - ArrayList<Team> match;
    - ArrayList<Team> teams;
    + ArrayList<ArrayList<Teams>> randomizeMatches(ArrayList<Team> teams, int bracketSize);
    + void nextBracket();

}

class Interface {
    - String username;
    - String password;
    - Scanner start;
}

Team <-- Player : 2..16
Main <-- Interface : ..*
Admin <-- Knockout
Admin <-- GroupStage
Admin <-- Team

Tournament *-- Knockout
Tournament *-- GroupStage


@enduml